/* Jison generated parser */
var parser = (function(){
var parser = {trace: function trace() { },
yy: {},
symbols_: {"error":2,"statement":3,"query":4,"EOF":5,"table_defs":6,"queries":7,"COMMA":8,"table_def":9,"table_decl":10,"body":11,"VAR":12,"LBR":13,"table_inner":14,"RBR":15,"AS":16,"ON":17,"e":18,"fields_or_queries":19,"clauses":20,"fields":21,"field":22,"alias":23,"ref":24,"STAR":25,"LBRACKET":26,"LPAREN":27,"or_dotted":28,"RPAREN":29,"RBRACKET_PL":30,"RBRACKET":31,"DOTTED_VAR":32,"literal":33,"STRING_LITERAL_S":34,"STRING_LITERAL_D":35,"NUM":36,"by_e":37,"ORD":38,"by_es":39,"es":40,"case_when":41,"BOOL":42,"NULL":43,"NOT":44,"MINUS":45,"PLUS":46,"DIV":47,"AND":48,"OR":49,"ILIKE":50,"LIKE":51,"EQ":52,"GTE":53,"LTE":54,"GT":55,"LT":56,"IS":57,"IN":58,"CASE":59,"conds":60,"else":61,"END":62,"ELSE":63,"cond":64,"WHEN":65,"THEN":66,"where":67,"WHERE":68,"group_by":69,"GROUP_BY":70,"having":71,"HAVING":72,"order_by":73,"ORDER_BY":74,"limit":75,"LIMIT":76,"offset":77,"OFFSET":78,"$accept":0,"$end":1},
terminals_: {2:"error",5:"EOF",8:"COMMA",12:"VAR",13:"LBR",15:"RBR",16:"AS",17:"ON",25:"STAR",26:"LBRACKET",27:"LPAREN",29:"RPAREN",30:"RBRACKET_PL",31:"RBRACKET",32:"DOTTED_VAR",34:"STRING_LITERAL_S",35:"STRING_LITERAL_D",36:"NUM",38:"ORD",42:"BOOL",43:"NULL",44:"NOT",45:"MINUS",46:"PLUS",47:"DIV",48:"AND",49:"OR",50:"ILIKE",51:"LIKE",52:"EQ",53:"GTE",54:"LTE",55:"GT",56:"LT",57:"IS",58:"IN",59:"CASE",62:"END",63:"ELSE",65:"WHEN",66:"THEN",68:"WHERE",70:"GROUP_BY",72:"HAVING",74:"ORDER_BY",76:"LIMIT",78:"OFFSET"},
productions_: [0,[3,2],[4,1],[7,3],[7,1],[6,2],[6,1],[9,2],[9,2],[11,3],[11,2],[10,5],[10,3],[10,3],[14,2],[14,1],[14,1],[19,1],[19,2],[19,1],[21,3],[21,1],[22,3],[22,1],[22,1],[22,3],[22,1],[24,6],[24,3],[24,6],[24,3],[28,1],[28,1],[23,1],[23,1],[33,1],[33,1],[33,1],[37,2],[37,1],[39,3],[39,1],[40,3],[40,1],[40,1],[40,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,3],[18,2],[18,4],[18,3],[18,3],[18,3],[18,3],[18,3],[18,3],[18,3],[18,3],[18,3],[18,3],[18,3],[18,3],[18,3],[18,3],[18,3],[41,5],[41,4],[41,4],[41,3],[61,2],[60,2],[60,1],[64,4],[20,1],[67,3],[67,2],[67,1],[69,3],[69,2],[69,1],[71,3],[71,2],[71,1],[73,3],[73,2],[73,1],[75,3],[75,2],[75,1],[77,2]],
performAction: function anonymous(yytext,yyleng,yylineno,yy,yystate,$$,_$) {

var $0 = $$.length - 1;
switch (yystate) {
case 1: return $$[$0-1]; 
break;
case 2:this.$ = new t.Query($$[$0]);
break;
case 3:this.$ = [$$[$0-2]].concat($$[$0]);
break;
case 4:this.$ = [$$[$0]];
break;
case 5:this.$ = [$$[$0-1]].concat($$[$0]);
break;
case 6:this.$ = [$$[$0]];
break;
case 7:this.$ = new t.Table($$[$0-1].name, $$[$0].selects, $$[$0].clauses, $$[$0].posts, $$[$0-1]);
break;
case 8:this.$ = new t.Table($$[$0-1], $$[$0].selects, $$[$0].clauses, $$[$0].posts);
break;
case 9:this.$ = $$[$0-1];
break;
case 10:this.$ = {};
break;
case 11:this.$ = { name: $$[$0-4], alias: $$[$0-2], join: $$[$0] };
break;
case 12:this.$ = { name: $$[$0-2], join: $$[$0] };
break;
case 13:this.$ = { name: $$[$0-2], alias: $$[$0] };
break;
case 14:this.$ = makeBody($$[$0-1], { clauses: $$[$0] });
break;
case 15:this.$ = makeBody($$[$0]);
break;
case 16:this.$ = makeBody({ clauses: $$[$0] });
break;
case 17:this.$ = { posts: $$[$0] };
break;
case 18:this.$ = { selects: $$[$0-1], posts: $$[$0] };
break;
case 19:this.$ = { selects: $$[$0] };
break;
case 20:this.$ = [$$[$0-2]].concat($$[$0]);
break;
case 21:this.$ = [$$[$0]];
break;
case 22:this.$ = new t.Field($$[$0-2], $$[$0]);
break;
case 23:this.$ = new t.Field($$[$0]);
break;
case 24:this.$ = $$[$0];
break;
case 25:this.$ = _.extend($$[$0-2], { alias: $$[$0] });
break;
case 26:this.$ = new t.Field(new t.StarToken('*'));
break;
case 27:this.$ = new t.PluralRef($$[$0-4], $$[$0-2]);
break;
case 28:this.$ = new t.PluralRef($$[$0-1], null);
break;
case 29:this.$ = new t.SingleRef($$[$0-4], $$[$0-2]);
break;
case 30:this.$ = new t.SingleRef($$[$0-1]);
break;
case 31:this.$ = new t.Token($$[$0]);
break;
case 32:this.$ = new t.Token($$[$0]);
break;
case 33:this.$ = $$[$0];
break;
case 34:this.$ = new t.Token($$[$0]);
break;
case 35:this.$ = new t.LitToken($$[$0]);
break;
case 36:this.$ = new t.LitToken($$[$0]);
break;
case 37:this.$ = new t.LitToken(parseFloat($$[$0], 10));
break;
case 38:this.$ = [$$[$0-1], $$[$0]];
break;
case 39:this.$ = [$$[$0]];
break;
case 40:this.$ = [$$[$0-2]].concat($$[$0]);
break;
case 41:this.$ = [$$[$0]];
break;
case 42:this.$ = [$$[$0-2]].concat($$[$0]);
break;
case 43:this.$ = [$$[$0]];
break;
case 44:this.$ = [new t.StarToken()];
break;
case 45:this.$ = [$$[$0]];
break;
case 46:this.$ = $$[$0];
break;
case 47:this.$ = $$[$0];
break;
case 48:this.$ = new t.Token($$[$0]);
break;
case 49:this.$ = new t.Token($$[$0]);
break;
case 50:this.$ = new t.BoolToken($$[$0]);
break;
case 51:this.$ = new t.NullToken();
break;
case 52:this.$ = $$[$0-1];
break;
case 53:this.$ = new t.NegExpr($$[$0]);
break;
case 54:this.$ = new t.FnExpr($$[$0-3], $$[$0-1]);
break;
case 55:this.$ = new t.ArithExpr('-', $$[$0-2], $$[$0]);
break;
case 56:this.$ = new t.ArithExpr('+', $$[$0-2], $$[$0]);
break;
case 57:this.$ = new t.ArithExpr('*', $$[$0-2], $$[$0]);
break;
case 58:this.$ = new t.ArithExpr('/', $$[$0-2], $$[$0]);
break;
case 59:this.$ = new t.CombExpr('AND', $$[$0-2], $$[$0]);
break;
case 60:this.$ = new t.CombExpr('OR', $$[$0-2], $$[$0]);
break;
case 61:this.$ = new t.EqExpr('ILIKE', $$[$0-2], $$[$0]);
break;
case 62:this.$ = new t.EqExpr('LIKE', $$[$0-2], $$[$0]);
break;
case 63:this.$ = new t.EqExpr($$[$0-1], $$[$0-2], $$[$0]);
break;
case 64:this.$ = new t.EqExpr($$[$0-1], $$[$0-2], $$[$0]);
break;
case 65:this.$ = new t.EqExpr($$[$0-1], $$[$0-2], $$[$0]);
break;
case 66:this.$ = new t.EqExpr($$[$0-1], $$[$0-2], $$[$0]);
break;
case 67:this.$ = new t.EqExpr($$[$0-1], $$[$0-2], $$[$0]);
break;
case 68:this.$ = new t.EqExpr($$[$0-1], $$[$0-2], $$[$0]);
break;
case 69:this.$ = new t.EqExpr($$[$0-1], $$[$0-2], $$[$0]);
break;
case 70:this.$ = new t.CaseWhen($$[$0-3], $$[$0-2], $$[$0-1]);
break;
case 71:this.$ = new t.CaseWhen($$[$0-2], $$[$0-1]);
break;
case 72:this.$ = new t.CaseWhen(null, $$[$0-2], $$[$0-1]);
break;
case 73:this.$ = new t.CaseWhen(null, $$[$0-1]);
break;
case 74:this.$ = new t.ElseExpr($$[$0]);
break;
case 75:this.$ = [$$[$0-1]].concat($$[$0]);
break;
case 76:this.$ = [$$[$0]];
break;
case 77:this.$ = new t.CondExpr($$[$0-2], $$[$0]);
break;
case 78:this.$ = $$[$0];
break;
case 79:this.$ = _.extend({ where: $$[$0-1] }, $$[$0]);
break;
case 80:this.$ = { where: $$[$0] };
break;
case 81:this.$ = $$[$0];
break;
case 82:this.$ = _.extend({ group_by: $$[$0-1] }, $$[$0]);
break;
case 83:this.$ = { group_by: $$[$0] };
break;
case 84:this.$ = $$[$0];
break;
case 85:this.$ = _.extend({ having: $$[$0-1] }, $$[$0]);
break;
case 86:this.$ = { having: $$[$0] };
break;
case 87:this.$ = $$[$0];
break;
case 88:this.$ = _.extend({ order_by: $$[$0-1] }, $$[$0]);
break;
case 89:this.$ = { order_by: $$[$0] };
break;
case 90:this.$ = $$[$0];
break;
case 91:this.$ = _.extend({ limit: $$[$0-1] }, $$[$0]);
break;
case 92:this.$ = { limit: $$[$0] };
break;
case 93:this.$ = $$[$0];
break;
case 94:this.$ = { offset: $$[$0] };
break;
}
},
table: [{3:1,4:2,6:3,9:4,10:5,12:[1,6]},{1:[3]},{5:[1,7]},{5:[2,2],8:[2,2],15:[2,2],29:[2,2],68:[2,2],70:[2,2],72:[2,2],74:[2,2],76:[2,2],78:[2,2]},{5:[2,6],6:8,8:[2,6],9:4,10:5,12:[1,6],15:[2,6],29:[2,6],68:[2,6],70:[2,6],72:[2,6],74:[2,6],76:[2,6],78:[2,6]},{11:9,13:[1,10]},{11:11,13:[1,10],16:[1,12],17:[1,13]},{1:[2,1]},{5:[2,5],8:[2,5],15:[2,5],29:[2,5],68:[2,5],70:[2,5],72:[2,5],74:[2,5],76:[2,5],78:[2,5]},{5:[2,7],8:[2,7],12:[2,7],15:[2,7],29:[2,7],68:[2,7],70:[2,7],72:[2,7],74:[2,7],76:[2,7],78:[2,7]},{4:21,6:3,7:18,9:4,10:5,12:[1,32],14:14,15:[1,15],18:25,19:16,20:17,21:19,22:22,24:26,25:[1,27],26:[1,38],27:[1,36],32:[1,33],33:30,34:[1,41],35:[1,42],36:[1,43],41:31,42:[1,34],43:[1,35],44:[1,37],59:[1,44],67:20,68:[1,23],69:24,70:[1,28],71:29,72:[1,39],73:40,74:[1,45],75:46,76:[1,47],77:48,78:[1,49]},{5:[2,8],8:[2,8],12:[2,8],15:[2,8],29:[2,8],68:[2,8],70:[2,8],72:[2,8],74:[2,8],76:[2,8],78:[2,8]},{12:[1,50]},{12:[1,52],18:51,27:[1,36],32:[1,33],33:30,34:[1,41],35:[1,42],36:[1,43],41:31,42:[1,34],43:[1,35],44:[1,37],59:[1,44]},{15:[1,53]},{5:[2,10],8:[2,10],12:[2,10],15:[2,10],29:[2,10],68:[2,10],70:[2,10],72:[2,10],74:[2,10],76:[2,10],78:[2,10]},{15:[2,15],20:54,67:20,68:[1,23],69:24,70:[1,28],71:29,72:[1,39],73:40,74:[1,45],75:46,76:[1,47],77:48,78:[1,49]},{15:[2,16]},{15:[2,17],68:[2,17],70:[2,17],72:[2,17],74:[2,17],76:[2,17],78:[2,17]},{4:21,6:3,7:55,9:4,10:5,12:[1,6],15:[2,19],68:[2,19],70:[2,19],72:[2,19],74:[2,19],76:[2,19],78:[2,19]},{15:[2,78]},{8:[1,56],15:[2,4],68:[2,4],70:[2,4],72:[2,4],74:[2,4],76:[2,4],78:[2,4]},{8:[1,57],12:[2,21],15:[2,21],68:[2,21],70:[2,21],72:[2,21],74:[2,21],76:[2,21],78:[2,21]},{12:[1,52],18:58,27:[1,36],32:[1,33],33:30,34:[1,41],35:[1,42],36:[1,43],41:31,42:[1,34],43:[1,35],44:[1,37],59:[1,44]},{15:[2,81]},{8:[2,23],12:[2,23],15:[2,23],16:[1,59],25:[1,62],45:[1,60],46:[1,61],47:[1,63],48:[1,64],49:[1,65],50:[1,66],51:[1,67],52:[1,68],53:[1,69],54:[1,70],55:[1,71],56:[1,72],57:[1,73],58:[1,74],68:[2,23],70:[2,23],72:[2,23],74:[2,23],76:[2,23],78:[2,23]},{8:[2,24],12:[2,24],15:[2,24],16:[1,75],68:[2,24],70:[2,24],72:[2,24],74:[2,24],76:[2,24],78:[2,24]},{8:[2,26],12:[2,26],15:[2,26],68:[2,26],70:[2,26],72:[2,26],74:[2,26],76:[2,26],78:[2,26]},{12:[1,52],18:78,27:[1,36],32:[1,33],33:30,34:[1,41],35:[1,42],36:[1,43],37:77,39:76,41:31,42:[1,34],43:[1,35],44:[1,37],59:[1,44]},{15:[2,84]},{8:[2,46],12:[2,46],13:[2,46],15:[2,46],16:[2,46],25:[2,46],29:[2,46],38:[2,46],45:[2,46],46:[2,46],47:[2,46],48:[2,46],49:[2,46],50:[2,46],51:[2,46],52:[2,46],53:[2,46],54:[2,46],55:[2,46],56:[2,46],57:[2,46],58:[2,46],62:[2,46],63:[2,46],65:[2,46],66:[2,46],68:[2,46],70:[2,46],72:[2,46],74:[2,46],76:[2,46],78:[2,46]},{8:[2,47],12:[2,47],13:[2,47],15:[2,47],16:[2,47],25:[2,47],29:[2,47],38:[2,47],45:[2,47],46:[2,47],47:[2,47],48:[2,47],49:[2,47],50:[2,47],51:[2,47],52:[2,47],53:[2,47],54:[2,47],55:[2,47],56:[2,47],57:[2,47],58:[2,47],62:[2,47],63:[2,47],65:[2,47],66:[2,47],68:[2,47],70:[2,47],72:[2,47],74:[2,47],76:[2,47],78:[2,47]},{8:[2,48],11:11,12:[2,48],13:[1,10],15:[2,48],16:[2,48],17:[1,13],25:[2,48],27:[1,79],29:[2,48],45:[2,48],46:[2,48],47:[2,48],48:[2,48],49:[2,48],50:[2,48],51:[2,48],52:[2,48],53:[2,48],54:[2,48],55:[2,48],56:[2,48],57:[2,48],58:[2,48],68:[2,48],70:[2,48],72:[2,48],74:[2,48],76:[2,48],78:[2,48]},{8:[2,49],12:[2,49],13:[2,49],15:[2,49],16:[2,49],25:[2,49],29:[2,49],38:[2,49],45:[2,49],46:[2,49],47:[2,49],48:[2,49],49:[2,49],50:[2,49],51:[2,49],52:[2,49],53:[2,49],54:[2,49],55:[2,49],56:[2,49],57:[2,49],58:[2,49],62:[2,49],63:[2,49],65:[2,49],66:[2,49],68:[2,49],70:[2,49],72:[2,49],74:[2,49],76:[2,49],78:[2,49]},{8:[2,50],12:[2,50],13:[2,50],15:[2,50],16:[2,50],25:[2,50],29:[2,50],38:[2,50],45:[2,50],46:[2,50],47:[2,50],48:[2,50],49:[2,50],50:[2,50],51:[2,50],52:[2,50],53:[2,50],54:[2,50],55:[2,50],56:[2,50],57:[2,50],58:[2,50],62:[2,50],63:[2,50],65:[2,50],66:[2,50],68:[2,50],70:[2,50],72:[2,50],74:[2,50],76:[2,50],78:[2,50]},{8:[2,51],12:[2,51],13:[2,51],15:[2,51],16:[2,51],25:[2,51],29:[2,51],38:[2,51],45:[2,51],46:[2,51],47:[2,51],48:[2,51],49:[2,51],50:[2,51],51:[2,51],52:[2,51],53:[2,51],54:[2,51],55:[2,51],56:[2,51],57:[2,51],58:[2,51],62:[2,51],63:[2,51],65:[2,51],66:[2,51],68:[2,51],70:[2,51],72:[2,51],74:[2,51],76:[2,51],78:[2,51]},{4:83,6:3,9:4,10:5,12:[1,32],18:81,25:[1,82],27:[1,36],32:[1,33],33:30,34:[1,41],35:[1,42],36:[1,43],40:80,41:31,42:[1,34],43:[1,35],44:[1,37],59:[1,44]},{12:[1,52],18:84,27:[1,36],32:[1,33],33:30,34:[1,41],35:[1,42],36:[1,43],41:31,42:[1,34],43:[1,35],44:[1,37],59:[1,44]},{12:[1,85]},{12:[1,52],18:86,27:[1,36],32:[1,33],33:30,34:[1,41],35:[1,42],36:[1,43],41:31,42:[1,34],43:[1,35],44:[1,37],59:[1,44]},{15:[2,87]},{8:[2,35],12:[2,35],13:[2,35],15:[2,35],16:[2,35],25:[2,35],29:[2,35],38:[2,35],45:[2,35],46:[2,35],47:[2,35],48:[2,35],49:[2,35],50:[2,35],51:[2,35],52:[2,35],53:[2,35],54:[2,35],55:[2,35],56:[2,35],57:[2,35],58:[2,35],62:[2,35],63:[2,35],65:[2,35],66:[2,35],68:[2,35],70:[2,35],72:[2,35],74:[2,35],76:[2,35],78:[2,35]},{8:[2,36],12:[2,36],13:[2,36],15:[2,36],16:[2,36],25:[2,36],29:[2,36],38:[2,36],45:[2,36],46:[2,36],47:[2,36],48:[2,36],49:[2,36],50:[2,36],51:[2,36],52:[2,36],53:[2,36],54:[2,36],55:[2,36],56:[2,36],57:[2,36],58:[2,36],62:[2,36],63:[2,36],65:[2,36],66:[2,36],68:[2,36],70:[2,36],72:[2,36],74:[2,36],76:[2,36],78:[2,36]},{8:[2,37],12:[2,37],13:[2,37],15:[2,37],16:[2,37],25:[2,37],29:[2,37],38:[2,37],45:[2,37],46:[2,37],47:[2,37],48:[2,37],49:[2,37],50:[2,37],51:[2,37],52:[2,37],53:[2,37],54:[2,37],55:[2,37],56:[2,37],57:[2,37],58:[2,37],62:[2,37],63:[2,37],65:[2,37],66:[2,37],68:[2,37],70:[2,37],72:[2,37],74:[2,37],76:[2,37],78:[2,37]},{12:[1,52],18:87,27:[1,36],32:[1,33],33:30,34:[1,41],35:[1,42],36:[1,43],41:31,42:[1,34],43:[1,35],44:[1,37],59:[1,44],60:88,64:89,65:[1,90]},{12:[1,52],18:78,27:[1,36],32:[1,33],33:30,34:[1,41],35:[1,42],36:[1,43],37:77,39:91,41:31,42:[1,34],43:[1,35],44:[1,37],59:[1,44]},{15:[2,90]},{12:[1,52],18:92,27:[1,36],32:[1,33],33:30,34:[1,41],35:[1,42],36:[1,43],41:31,42:[1,34],43:[1,35],44:[1,37],59:[1,44]},{15:[2,93]},{12:[1,52],18:93,27:[1,36],32:[1,33],33:30,34:[1,41],35:[1,42],36:[1,43],41:31,42:[1,34],43:[1,35],44:[1,37],59:[1,44]},{13:[2,13],17:[1,94]},{13:[2,12],25:[1,62],45:[1,60],46:[1,61],47:[1,63],48:[1,64],49:[1,65],50:[1,66],51:[1,67],52:[1,68],53:[1,69],54:[1,70],55:[1,71],56:[1,72],57:[1,73],58:[1,74]},{8:[2,48],12:[2,48],13:[2,48],15:[2,48],16:[2,48],25:[2,48],27:[1,79],29:[2,48],38:[2,48],45:[2,48],46:[2,48],47:[2,48],48:[2,48],49:[2,48],50:[2,48],51:[2,48],52:[2,48],53:[2,48],54:[2,48],55:[2,48],56:[2,48],57:[2,48],58:[2,48],62:[2,48],63:[2,48],65:[2,48],66:[2,48],68:[2,48],70:[2,48],72:[2,48],74:[2,48],76:[2,48],78:[2,48]},{5:[2,9],8:[2,9],12:[2,9],15:[2,9],29:[2,9],68:[2,9],70:[2,9],72:[2,9],74:[2,9],76:[2,9],78:[2,9]},{15:[2,14]},{15:[2,18],68:[2,18],70:[2,18],72:[2,18],74:[2,18],76:[2,18],78:[2,18]},{4:21,6:3,7:95,9:4,10:5,12:[1,6]},{12:[1,52],18:25,21:96,22:22,24:26,25:[1,27],26:[1,38],27:[1,36],32:[1,33],33:30,34:[1,41],35:[1,42],36:[1,43],41:31,42:[1,34],43:[1,35],44:[1,37],59:[1,44]},{15:[2,80],25:[1,62],45:[1,60],46:[1,61],47:[1,63],48:[1,64],49:[1,65],50:[1,66],51:[1,67],52:[1,68],53:[1,69],54:[1,70],55:[1,71],56:[1,72],57:[1,73],58:[1,74],69:97,70:[1,28],71:29,72:[1,39],73:40,74:[1,45],75:46,76:[1,47],77:48,78:[1,49]},{12:[1,100],23:98,33:99,34:[1,41],35:[1,42],36:[1,43]},{12:[1,52],18:101,27:[1,36],32:[1,33],33:30,34:[1,41],35:[1,42],36:[1,43],41:31,42:[1,34],43:[1,35],44:[1,37],59:[1,44]},{12:[1,52],18:102,27:[1,36],32:[1,33],33:30,34:[1,41],35:[1,42],36:[1,43],41:31,42:[1,34],43:[1,35],44:[1,37],59:[1,44]},{12:[1,52],18:103,27:[1,36],32:[1,33],33:30,34:[1,41],35:[1,42],36:[1,43],41:31,42:[1,34],43:[1,35],44:[1,37],59:[1,44]},{12:[1,52],18:104,27:[1,36],32:[1,33],33:30,34:[1,41],35:[1,42],36:[1,43],41:31,42:[1,34],43:[1,35],44:[1,37],59:[1,44]},{12:[1,52],18:105,27:[1,36],32:[1,33],33:30,34:[1,41],35:[1,42],36:[1,43],41:31,42:[1,34],43:[1,35],44:[1,37],59:[1,44]},{12:[1,52],18:106,27:[1,36],32:[1,33],33:30,34:[1,41],35:[1,42],36:[1,43],41:31,42:[1,34],43:[1,35],44:[1,37],59:[1,44]},{12:[1,52],18:107,27:[1,36],32:[1,33],33:30,34:[1,41],35:[1,42],36:[1,43],41:31,42:[1,34],43:[1,35],44:[1,37],59:[1,44]},{12:[1,52],18:108,27:[1,36],32:[1,33],33:30,34:[1,41],35:[1,42],36:[1,43],41:31,42:[1,34],43:[1,35],44:[1,37],59:[1,44]},{12:[1,52],18:109,27:[1,36],32:[1,33],33:30,34:[1,41],35:[1,42],36:[1,43],41:31,42:[1,34],43:[1,35],44:[1,37],59:[1,44]},{12:[1,52],18:110,27:[1,36],32:[1,33],33:30,34:[1,41],35:[1,42],36:[1,43],41:31,42:[1,34],43:[1,35],44:[1,37],59:[1,44]},{12:[1,52],18:111,27:[1,36],32:[1,33],33:30,34:[1,41],35:[1,42],36:[1,43],41:31,42:[1,34],43:[1,35],44:[1,37],59:[1,44]},{12:[1,52],18:112,27:[1,36],32:[1,33],33:30,34:[1,41],35:[1,42],36:[1,43],41:31,42:[1,34],43:[1,35],44:[1,37],59:[1,44]},{12:[1,52],18:113,27:[1,36],32:[1,33],33:30,34:[1,41],35:[1,42],36:[1,43],41:31,42:[1,34],43:[1,35],44:[1,37],59:[1,44]},{12:[1,52],18:114,27:[1,36],32:[1,33],33:30,34:[1,41],35:[1,42],36:[1,43],41:31,42:[1,34],43:[1,35],44:[1,37],59:[1,44]},{12:[1,52],18:115,27:[1,36],32:[1,33],33:30,34:[1,41],35:[1,42],36:[1,43],41:31,42:[1,34],43:[1,35],44:[1,37],59:[1,44]},{12:[1,100],23:116,33:99,34:[1,41],35:[1,42],36:[1,43]},{15:[2,83],71:117,72:[1,39],73:40,74:[1,45],75:46,76:[1,47],77:48,78:[1,49]},{8:[1,118],15:[2,41],72:[2,41],74:[2,41],76:[2,41],78:[2,41]},{8:[2,39],15:[2,39],25:[1,62],38:[1,119],45:[1,60],46:[1,61],47:[1,63],48:[1,64],49:[1,65],50:[1,66],51:[1,67],52:[1,68],53:[1,69],54:[1,70],55:[1,71],56:[1,72],57:[1,73],58:[1,74],72:[2,39],74:[2,39],76:[2,39],78:[2,39]},{4:83,6:3,9:4,10:5,12:[1,32],18:81,25:[1,82],27:[1,36],32:[1,33],33:30,34:[1,41],35:[1,42],36:[1,43],40:120,41:31,42:[1,34],43:[1,35],44:[1,37],59:[1,44]},{29:[1,121]},{8:[1,122],25:[1,62],29:[2,43],45:[1,60],46:[1,61],47:[1,63],48:[1,64],49:[1,65],50:[1,66],51:[1,67],52:[1,68],53:[1,69],54:[1,70],55:[1,71],56:[1,72],57:[1,73],58:[1,74]},{29:[2,44]},{29:[2,45]},{8:[2,53],12:[2,53],13:[2,53],15:[2,53],16:[2,53],25:[2,53],29:[2,53],38:[2,53],45:[2,53],46:[2,53],47:[2,53],48:[2,53],49:[2,53],50:[2,53],51:[2,53],52:[2,53],53:[2,53],54:[2,53],55:[2,53],56:[2,53],57:[2,53],58:[2,53],62:[2,53],63:[2,53],65:[2,53],66:[2,53],68:[2,53],70:[2,53],72:[2,53],74:[2,53],76:[2,53],78:[2,53]},{27:[1,123],30:[1,124],31:[1,125]},{15:[2,86],25:[1,62],45:[1,60],46:[1,61],47:[1,63],48:[1,64],49:[1,65],50:[1,66],51:[1,67],52:[1,68],53:[1,69],54:[1,70],55:[1,71],56:[1,72],57:[1,73],58:[1,74],73:126,74:[1,45],75:46,76:[1,47],77:48,78:[1,49]},{25:[1,62],45:[1,60],46:[1,61],47:[1,63],48:[1,64],49:[1,65],50:[1,66],51:[1,67],52:[1,68],53:[1,69],54:[1,70],55:[1,71],56:[1,72],57:[1,73],58:[1,74],60:127,64:89,65:[1,90]},{61:128,62:[1,129],63:[1,130]},{60:131,62:[2,76],63:[2,76],64:89,65:[1,90]},{12:[1,52],18:132,27:[1,36],32:[1,33],33:30,34:[1,41],35:[1,42],36:[1,43],41:31,42:[1,34],43:[1,35],44:[1,37],59:[1,44]},{15:[2,89],75:133,76:[1,47],77:48,78:[1,49]},{15:[2,92],25:[1,62],45:[1,60],46:[1,61],47:[1,63],48:[1,64],49:[1,65],50:[1,66],51:[1,67],52:[1,68],53:[1,69],54:[1,70],55:[1,71],56:[1,72],57:[1,73],58:[1,74],77:134,78:[1,49]},{15:[2,94],25:[1,62],45:[1,60],46:[1,61],47:[1,63],48:[1,64],49:[1,65],50:[1,66],51:[1,67],52:[1,68],53:[1,69],54:[1,70],55:[1,71],56:[1,72],57:[1,73],58:[1,74]},{12:[1,52],18:135,27:[1,36],32:[1,33],33:30,34:[1,41],35:[1,42],36:[1,43],41:31,42:[1,34],43:[1,35],44:[1,37],59:[1,44]},{15:[2,3],68:[2,3],70:[2,3],72:[2,3],74:[2,3],76:[2,3],78:[2,3]},{12:[2,20],15:[2,20],68:[2,20],70:[2,20],72:[2,20],74:[2,20],76:[2,20],78:[2,20]},{15:[2,79]},{8:[2,22],12:[2,22],15:[2,22],68:[2,22],70:[2,22],72:[2,22],74:[2,22],76:[2,22],78:[2,22]},{8:[2,33],12:[2,33],15:[2,33],68:[2,33],70:[2,33],72:[2,33],74:[2,33],76:[2,33],78:[2,33]},{8:[2,34],12:[2,34],15:[2,34],68:[2,34],70:[2,34],72:[2,34],74:[2,34],76:[2,34],78:[2,34]},{8:[2,55],12:[2,55],13:[2,55],15:[2,55],16:[2,55],25:[1,62],29:[2,55],38:[2,55],45:[2,55],46:[2,55],47:[1,63],48:[1,64],49:[1,65],50:[1,66],51:[1,67],52:[1,68],53:[1,69],54:[1,70],55:[1,71],56:[1,72],57:[1,73],58:[1,74],62:[2,55],63:[2,55],65:[2,55],66:[2,55],68:[2,55],70:[2,55],72:[2,55],74:[2,55],76:[2,55],78:[2,55]},{8:[2,56],12:[2,56],13:[2,56],15:[2,56],16:[2,56],25:[1,62],29:[2,56],38:[2,56],45:[2,56],46:[2,56],47:[1,63],48:[1,64],49:[1,65],50:[1,66],51:[1,67],52:[1,68],53:[1,69],54:[1,70],55:[1,71],56:[1,72],57:[1,73],58:[1,74],62:[2,56],63:[2,56],65:[2,56],66:[2,56],68:[2,56],70:[2,56],72:[2,56],74:[2,56],76:[2,56],78:[2,56]},{8:[2,57],12:[2,57],13:[2,57],15:[2,57],16:[2,57],25:[2,57],29:[2,57],38:[2,57],45:[2,57],46:[2,57],47:[2,57],48:[1,64],49:[1,65],50:[1,66],51:[1,67],52:[1,68],53:[1,69],54:[1,70],55:[1,71],56:[1,72],57:[1,73],58:[1,74],62:[2,57],63:[2,57],65:[2,57],66:[2,57],68:[2,57],70:[2,57],72:[2,57],74:[2,57],76:[2,57],78:[2,57]},{8:[2,58],12:[2,58],13:[2,58],15:[2,58],16:[2,58],25:[2,58],29:[2,58],38:[2,58],45:[2,58],46:[2,58],47:[2,58],48:[1,64],49:[1,65],50:[1,66],51:[1,67],52:[1,68],53:[1,69],54:[1,70],55:[1,71],56:[1,72],57:[1,73],58:[1,74],62:[2,58],63:[2,58],65:[2,58],66:[2,58],68:[2,58],70:[2,58],72:[2,58],74:[2,58],76:[2,58],78:[2,58]},{8:[2,59],12:[2,59],13:[2,59],15:[2,59],16:[2,59],25:[2,59],29:[2,59],38:[2,59],45:[2,59],46:[2,59],47:[2,59],48:[1,64],49:[1,65],50:[1,66],51:[1,67],52:[1,68],53:[1,69],54:[1,70],55:[1,71],56:[1,72],57:[1,73],58:[1,74],62:[2,59],63:[2,59],65:[2,59],66:[2,59],68:[2,59],70:[2,59],72:[2,59],74:[2,59],76:[2,59],78:[2,59]},{8:[2,60],12:[2,60],13:[2,60],15:[2,60],16:[2,60],25:[2,60],29:[2,60],38:[2,60],45:[2,60],46:[2,60],47:[2,60],48:[1,64],49:[1,65],50:[1,66],51:[1,67],52:[1,68],53:[1,69],54:[1,70],55:[1,71],56:[1,72],57:[1,73],58:[1,74],62:[2,60],63:[2,60],65:[2,60],66:[2,60],68:[2,60],70:[2,60],72:[2,60],74:[2,60],76:[2,60],78:[2,60]},{8:[2,61],12:[2,61],13:[2,61],15:[2,61],16:[2,61],25:[2,61],29:[2,61],38:[2,61],45:[2,61],46:[2,61],47:[2,61],48:[2,61],49:[2,61],50:[2,61],51:[2,61],52:[2,61],53:[2,61],54:[2,61],55:[2,61],56:[2,61],57:[2,61],58:[2,61],62:[2,61],63:[2,61],65:[2,61],66:[2,61],68:[2,61],70:[2,61],72:[2,61],74:[2,61],76:[2,61],78:[2,61]},{8:[2,62],12:[2,62],13:[2,62],15:[2,62],16:[2,62],25:[2,62],29:[2,62],38:[2,62],45:[2,62],46:[2,62],47:[2,62],48:[2,62],49:[2,62],50:[2,62],51:[2,62],52:[2,62],53:[2,62],54:[2,62],55:[2,62],56:[2,62],57:[2,62],58:[2,62],62:[2,62],63:[2,62],65:[2,62],66:[2,62],68:[2,62],70:[2,62],72:[2,62],74:[2,62],76:[2,62],78:[2,62]},{8:[2,63],12:[2,63],13:[2,63],15:[2,63],16:[2,63],25:[2,63],29:[2,63],38:[2,63],45:[2,63],46:[2,63],47:[2,63],48:[2,63],49:[2,63],50:[2,63],51:[2,63],52:[2,63],53:[2,63],54:[2,63],55:[2,63],56:[2,63],57:[2,63],58:[2,63],62:[2,63],63:[2,63],65:[2,63],66:[2,63],68:[2,63],70:[2,63],72:[2,63],74:[2,63],76:[2,63],78:[2,63]},{8:[2,64],12:[2,64],13:[2,64],15:[2,64],16:[2,64],25:[2,64],29:[2,64],38:[2,64],45:[2,64],46:[2,64],47:[2,64],48:[2,64],49:[2,64],50:[2,64],51:[2,64],52:[2,64],53:[2,64],54:[2,64],55:[2,64],56:[2,64],57:[2,64],58:[2,64],62:[2,64],63:[2,64],65:[2,64],66:[2,64],68:[2,64],70:[2,64],72:[2,64],74:[2,64],76:[2,64],78:[2,64]},{8:[2,65],12:[2,65],13:[2,65],15:[2,65],16:[2,65],25:[2,65],29:[2,65],38:[2,65],45:[2,65],46:[2,65],47:[2,65],48:[2,65],49:[2,65],50:[2,65],51:[2,65],52:[2,65],53:[2,65],54:[2,65],55:[2,65],56:[2,65],57:[2,65],58:[2,65],62:[2,65],63:[2,65],65:[2,65],66:[2,65],68:[2,65],70:[2,65],72:[2,65],74:[2,65],76:[2,65],78:[2,65]},{8:[2,66],12:[2,66],13:[2,66],15:[2,66],16:[2,66],25:[2,66],29:[2,66],38:[2,66],45:[2,66],46:[2,66],47:[2,66],48:[2,66],49:[2,66],50:[2,66],51:[2,66],52:[2,66],53:[2,66],54:[2,66],55:[2,66],56:[2,66],57:[2,66],58:[2,66],62:[2,66],63:[2,66],65:[2,66],66:[2,66],68:[2,66],70:[2,66],72:[2,66],74:[2,66],76:[2,66],78:[2,66]},{8:[2,67],12:[2,67],13:[2,67],15:[2,67],16:[2,67],25:[2,67],29:[2,67],38:[2,67],45:[2,67],46:[2,67],47:[2,67],48:[2,67],49:[2,67],50:[2,67],51:[2,67],52:[2,67],53:[2,67],54:[2,67],55:[2,67],56:[2,67],57:[2,67],58:[2,67],62:[2,67],63:[2,67],65:[2,67],66:[2,67],68:[2,67],70:[2,67],72:[2,67],74:[2,67],76:[2,67],78:[2,67]},{8:[2,68],12:[2,68],13:[2,68],15:[2,68],16:[2,68],25:[2,68],29:[2,68],38:[2,68],45:[2,68],46:[2,68],47:[2,68],48:[2,68],49:[2,68],50:[2,68],51:[2,68],52:[2,68],53:[2,68],54:[2,68],55:[2,68],56:[2,68],57:[2,68],58:[2,68],62:[2,68],63:[2,68],65:[2,68],66:[2,68],68:[2,68],70:[2,68],72:[2,68],74:[2,68],76:[2,68],78:[2,68]},{8:[2,69],12:[2,69],13:[2,69],15:[2,69],16:[2,69],25:[2,69],29:[2,69],38:[2,69],45:[2,69],46:[2,69],47:[2,69],48:[2,69],49:[2,69],50:[2,69],51:[2,69],52:[2,69],53:[2,69],54:[2,69],55:[2,69],56:[2,69],57:[2,69],58:[2,69],62:[2,69],63:[2,69],65:[2,69],66:[2,69],68:[2,69],70:[2,69],72:[2,69],74:[2,69],76:[2,69],78:[2,69]},{8:[2,25],12:[2,25],15:[2,25],68:[2,25],70:[2,25],72:[2,25],74:[2,25],76:[2,25],78:[2,25]},{15:[2,82]},{12:[1,52],18:78,27:[1,36],32:[1,33],33:30,34:[1,41],35:[1,42],36:[1,43],37:77,39:136,41:31,42:[1,34],43:[1,35],44:[1,37],59:[1,44]},{8:[2,38],15:[2,38],72:[2,38],74:[2,38],76:[2,38],78:[2,38]},{29:[1,137]},{8:[2,52],12:[2,52],13:[2,52],15:[2,52],16:[2,52],25:[2,52],29:[2,52],38:[2,52],45:[2,52],46:[2,52],47:[2,52],48:[2,52],49:[2,52],50:[2,52],51:[2,52],52:[2,52],53:[2,52],54:[2,52],55:[2,52],56:[2,52],57:[2,52],58:[2,52],62:[2,52],63:[2,52],65:[2,52],66:[2,52],68:[2,52],70:[2,52],72:[2,52],74:[2,52],76:[2,52],78:[2,52]},{4:83,6:3,9:4,10:5,12:[1,32],18:81,25:[1,82],27:[1,36],32:[1,33],33:30,34:[1,41],35:[1,42],36:[1,43],40:138,41:31,42:[1,34],43:[1,35],44:[1,37],59:[1,44]},{12:[1,141],28:139,32:[1,140]},{8:[2,28],12:[2,28],15:[2,28],16:[2,28],68:[2,28],70:[2,28],72:[2,28],74:[2,28],76:[2,28],78:[2,28]},{8:[2,30],12:[2,30],15:[2,30],16:[2,30],68:[2,30],70:[2,30],72:[2,30],74:[2,30],76:[2,30],78:[2,30]},{15:[2,85]},{61:142,62:[1,143],63:[1,130]},{62:[1,144]},{8:[2,73],12:[2,73],13:[2,73],15:[2,73],16:[2,73],25:[2,73],29:[2,73],38:[2,73],45:[2,73],46:[2,73],47:[2,73],48:[2,73],49:[2,73],50:[2,73],51:[2,73],52:[2,73],53:[2,73],54:[2,73],55:[2,73],56:[2,73],57:[2,73],58:[2,73],62:[2,73],63:[2,73],65:[2,73],66:[2,73],68:[2,73],70:[2,73],72:[2,73],74:[2,73],76:[2,73],78:[2,73]},{12:[1,52],18:145,27:[1,36],32:[1,33],33:30,34:[1,41],35:[1,42],36:[1,43],41:31,42:[1,34],43:[1,35],44:[1,37],59:[1,44]},{62:[2,75],63:[2,75]},{25:[1,62],45:[1,60],46:[1,61],47:[1,63],48:[1,64],49:[1,65],50:[1,66],51:[1,67],52:[1,68],53:[1,69],54:[1,70],55:[1,71],56:[1,72],57:[1,73],58:[1,74],66:[1,146]},{15:[2,88]},{15:[2,91]},{13:[2,11],25:[1,62],45:[1,60],46:[1,61],47:[1,63],48:[1,64],49:[1,65],50:[1,66],51:[1,67],52:[1,68],53:[1,69],54:[1,70],55:[1,71],56:[1,72],57:[1,73],58:[1,74]},{15:[2,40],72:[2,40],74:[2,40],76:[2,40],78:[2,40]},{8:[2,54],12:[2,54],13:[2,54],15:[2,54],16:[2,54],25:[2,54],29:[2,54],38:[2,54],45:[2,54],46:[2,54],47:[2,54],48:[2,54],49:[2,54],50:[2,54],51:[2,54],52:[2,54],53:[2,54],54:[2,54],55:[2,54],56:[2,54],57:[2,54],58:[2,54],62:[2,54],63:[2,54],65:[2,54],66:[2,54],68:[2,54],70:[2,54],72:[2,54],74:[2,54],76:[2,54],78:[2,54]},{29:[2,42]},{29:[1,147]},{29:[2,31]},{29:[2,32]},{62:[1,148]},{8:[2,71],12:[2,71],13:[2,71],15:[2,71],16:[2,71],25:[2,71],29:[2,71],38:[2,71],45:[2,71],46:[2,71],47:[2,71],48:[2,71],49:[2,71],50:[2,71],51:[2,71],52:[2,71],53:[2,71],54:[2,71],55:[2,71],56:[2,71],57:[2,71],58:[2,71],62:[2,71],63:[2,71],65:[2,71],66:[2,71],68:[2,71],70:[2,71],72:[2,71],74:[2,71],76:[2,71],78:[2,71]},{8:[2,72],12:[2,72],13:[2,72],15:[2,72],16:[2,72],25:[2,72],29:[2,72],38:[2,72],45:[2,72],46:[2,72],47:[2,72],48:[2,72],49:[2,72],50:[2,72],51:[2,72],52:[2,72],53:[2,72],54:[2,72],55:[2,72],56:[2,72],57:[2,72],58:[2,72],62:[2,72],63:[2,72],65:[2,72],66:[2,72],68:[2,72],70:[2,72],72:[2,72],74:[2,72],76:[2,72],78:[2,72]},{25:[1,62],45:[1,60],46:[1,61],47:[1,63],48:[1,64],49:[1,65],50:[1,66],51:[1,67],52:[1,68],53:[1,69],54:[1,70],55:[1,71],56:[1,72],57:[1,73],58:[1,74],62:[2,74]},{12:[1,52],18:149,27:[1,36],32:[1,33],33:30,34:[1,41],35:[1,42],36:[1,43],41:31,42:[1,34],43:[1,35],44:[1,37],59:[1,44]},{30:[1,150],31:[1,151]},{8:[2,70],12:[2,70],13:[2,70],15:[2,70],16:[2,70],25:[2,70],29:[2,70],38:[2,70],45:[2,70],46:[2,70],47:[2,70],48:[2,70],49:[2,70],50:[2,70],51:[2,70],52:[2,70],53:[2,70],54:[2,70],55:[2,70],56:[2,70],57:[2,70],58:[2,70],62:[2,70],63:[2,70],65:[2,70],66:[2,70],68:[2,70],70:[2,70],72:[2,70],74:[2,70],76:[2,70],78:[2,70]},{25:[1,62],45:[1,60],46:[1,61],47:[1,63],48:[1,64],49:[1,65],50:[1,66],51:[1,67],52:[1,68],53:[1,69],54:[1,70],55:[1,71],56:[1,72],57:[1,73],58:[1,74],62:[2,77],63:[2,77],65:[2,77]},{8:[2,27],12:[2,27],15:[2,27],16:[2,27],68:[2,27],70:[2,27],72:[2,27],74:[2,27],76:[2,27],78:[2,27]},{8:[2,29],12:[2,29],15:[2,29],16:[2,29],68:[2,29],70:[2,29],72:[2,29],74:[2,29],76:[2,29],78:[2,29]}],
defaultActions: {7:[2,1],17:[2,16],20:[2,78],24:[2,81],29:[2,84],40:[2,87],46:[2,90],48:[2,93],54:[2,14],82:[2,44],83:[2,45],97:[2,79],117:[2,82],126:[2,85],133:[2,88],134:[2,91],138:[2,42],140:[2,31],141:[2,32]},
parseError: function parseError(str, hash) {
    throw new Error(str);
},
parse: function parse(input) {
    var self = this, stack = [0], vstack = [null], lstack = [], table = this.table, yytext = "", yylineno = 0, yyleng = 0, recovering = 0, TERROR = 2, EOF = 1;
    this.lexer.setInput(input);
    this.lexer.yy = this.yy;
    this.yy.lexer = this.lexer;
    this.yy.parser = this;
    if (typeof this.lexer.yylloc == "undefined")
        this.lexer.yylloc = {};
    var yyloc = this.lexer.yylloc;
    lstack.push(yyloc);
    var ranges = this.lexer.options && this.lexer.options.ranges;
    if (typeof this.yy.parseError === "function")
        this.parseError = this.yy.parseError;
    function popStack(n) {
        stack.length = stack.length - 2 * n;
        vstack.length = vstack.length - n;
        lstack.length = lstack.length - n;
    }
    function lex() {
        var token;
        token = self.lexer.lex() || 1;
        if (typeof token !== "number") {
            token = self.symbols_[token] || token;
        }
        return token;
    }
    var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;
    while (true) {
        state = stack[stack.length - 1];
        if (this.defaultActions[state]) {
            action = this.defaultActions[state];
        } else {
            if (symbol === null || typeof symbol == "undefined") {
                symbol = lex();
            }
            action = table[state] && table[state][symbol];
        }
        if (typeof action === "undefined" || !action.length || !action[0]) {
            var errStr = "";
            if (!recovering) {
                expected = [];
                for (p in table[state])
                    if (this.terminals_[p] && p > 2) {
                        expected.push("'" + this.terminals_[p] + "'");
                    }
                if (this.lexer.showPosition) {
                    errStr = "Parse error on line " + (yylineno + 1) + ":\n" + this.lexer.showPosition() + "\nExpecting " + expected.join(", ") + ", got '" + (this.terminals_[symbol] || symbol) + "'";
                } else {
                    errStr = "Parse error on line " + (yylineno + 1) + ": Unexpected " + (symbol == 1?"end of input":"'" + (this.terminals_[symbol] || symbol) + "'");
                }
                this.parseError(errStr, {text: this.lexer.match, token: this.terminals_[symbol] || symbol, line: this.lexer.yylineno, loc: yyloc, expected: expected});
            }
        }
        if (action[0] instanceof Array && action.length > 1) {
            throw new Error("Parse Error: multiple actions possible at state: " + state + ", token: " + symbol);
        }
        switch (action[0]) {
        case 1:
            stack.push(symbol);
            vstack.push(this.lexer.yytext);
            lstack.push(this.lexer.yylloc);
            stack.push(action[1]);
            symbol = null;
            if (!preErrorSymbol) {
                yyleng = this.lexer.yyleng;
                yytext = this.lexer.yytext;
                yylineno = this.lexer.yylineno;
                yyloc = this.lexer.yylloc;
                if (recovering > 0)
                    recovering--;
            } else {
                symbol = preErrorSymbol;
                preErrorSymbol = null;
            }
            break;
        case 2:
            len = this.productions_[action[1]][1];
            yyval.$ = vstack[vstack.length - len];
            yyval._$ = {first_line: lstack[lstack.length - (len || 1)].first_line, last_line: lstack[lstack.length - 1].last_line, first_column: lstack[lstack.length - (len || 1)].first_column, last_column: lstack[lstack.length - 1].last_column};
            if (ranges) {
                yyval._$.range = [lstack[lstack.length - (len || 1)].range[0], lstack[lstack.length - 1].range[1]];
            }
            r = this.performAction.call(yyval, yytext, yyleng, yylineno, this.yy, action[1], vstack, lstack);
            if (typeof r !== "undefined") {
                return r;
            }
            if (len) {
                stack = stack.slice(0, -1 * len * 2);
                vstack = vstack.slice(0, -1 * len);
                lstack = lstack.slice(0, -1 * len);
            }
            stack.push(this.productions_[action[1]][0]);
            vstack.push(yyval.$);
            lstack.push(yyval._$);
            newState = table[stack[stack.length - 2]][stack[stack.length - 1]];
            stack.push(newState);
            break;
        case 3:
            return true;
        }
    }
    return true;
}
};


/* AQL Grammar */

var t = require('./types')
  , _ = require('underscore');

function makeBody() {
  var args = [].slice.call(arguments)
    , defs = { selects: [], posts: [], clauses: [] };
  return _.extend.apply(null, args);
}


/* Jison generated lexer */
var lexer = (function(){
var lexer = ({EOF:1,
parseError:function parseError(str, hash) {
        if (this.yy.parser) {
            this.yy.parser.parseError(str, hash);
        } else {
            throw new Error(str);
        }
    },
setInput:function (input) {
        this._input = input;
        this._more = this._less = this.done = false;
        this.yylineno = this.yyleng = 0;
        this.yytext = this.matched = this.match = '';
        this.conditionStack = ['INITIAL'];
        this.yylloc = {first_line:1,first_column:0,last_line:1,last_column:0};
        if (this.options.ranges) this.yylloc.range = [0,0];
        this.offset = 0;
        return this;
    },
input:function () {
        var ch = this._input[0];
        this.yytext += ch;
        this.yyleng++;
        this.offset++;
        this.match += ch;
        this.matched += ch;
        var lines = ch.match(/(?:\r\n?|\n).*/g);
        if (lines) {
            this.yylineno++;
            this.yylloc.last_line++;
        } else {
            this.yylloc.last_column++;
        }
        if (this.options.ranges) this.yylloc.range[1]++;

        this._input = this._input.slice(1);
        return ch;
    },
unput:function (ch) {
        var len = ch.length;
        var lines = ch.split(/(?:\r\n?|\n)/g);

        this._input = ch + this._input;
        this.yytext = this.yytext.substr(0, this.yytext.length-len-1);
        //this.yyleng -= len;
        this.offset -= len;
        var oldLines = this.match.split(/(?:\r\n?|\n)/g);
        this.match = this.match.substr(0, this.match.length-1);
        this.matched = this.matched.substr(0, this.matched.length-1);

        if (lines.length-1) this.yylineno -= lines.length-1;
        var r = this.yylloc.range;

        this.yylloc = {first_line: this.yylloc.first_line,
          last_line: this.yylineno+1,
          first_column: this.yylloc.first_column,
          last_column: lines ?
              (lines.length === oldLines.length ? this.yylloc.first_column : 0) + oldLines[oldLines.length - lines.length].length - lines[0].length:
              this.yylloc.first_column - len
          };

        if (this.options.ranges) {
            this.yylloc.range = [r[0], r[0] + this.yyleng - len];
        }
        return this;
    },
more:function () {
        this._more = true;
        return this;
    },
less:function (n) {
        this.unput(this.match.slice(n));
    },
pastInput:function () {
        var past = this.matched.substr(0, this.matched.length - this.match.length);
        return (past.length > 20 ? '...':'') + past.substr(-20).replace(/\n/g, "");
    },
upcomingInput:function () {
        var next = this.match;
        if (next.length < 20) {
            next += this._input.substr(0, 20-next.length);
        }
        return (next.substr(0,20)+(next.length > 20 ? '...':'')).replace(/\n/g, "");
    },
showPosition:function () {
        var pre = this.pastInput();
        var c = new Array(pre.length + 1).join("-");
        return pre + this.upcomingInput() + "\n" + c+"^";
    },
next:function () {
        if (this.done) {
            return this.EOF;
        }
        if (!this._input) this.done = true;

        var token,
            match,
            tempMatch,
            index,
            col,
            lines;
        if (!this._more) {
            this.yytext = '';
            this.match = '';
        }
        var rules = this._currentRules();
        for (var i=0;i < rules.length; i++) {
            tempMatch = this._input.match(this.rules[rules[i]]);
            if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {
                match = tempMatch;
                index = i;
                if (!this.options.flex) break;
            }
        }
        if (match) {
            lines = match[0].match(/(?:\r\n?|\n).*/g);
            if (lines) this.yylineno += lines.length;
            this.yylloc = {first_line: this.yylloc.last_line,
                           last_line: this.yylineno+1,
                           first_column: this.yylloc.last_column,
                           last_column: lines ? lines[lines.length-1].length-lines[lines.length-1].match(/\r?\n?/)[0].length : this.yylloc.last_column + match[0].length};
            this.yytext += match[0];
            this.match += match[0];
            this.matches = match;
            this.yyleng = this.yytext.length;
            if (this.options.ranges) {
                this.yylloc.range = [this.offset, this.offset += this.yyleng];
            }
            this._more = false;
            this._input = this._input.slice(match[0].length);
            this.matched += match[0];
            token = this.performAction.call(this, this.yy, this, rules[index],this.conditionStack[this.conditionStack.length-1]);
            if (this.done && this._input) this.done = false;
            if (token) return token;
            else return;
        }
        if (this._input === "") {
            return this.EOF;
        } else {
            return this.parseError('Lexical error on line '+(this.yylineno+1)+'. Unrecognized text.\n'+this.showPosition(),
                    {text: "", token: null, line: this.yylineno});
        }
    },
lex:function lex() {
        var r = this.next();
        if (typeof r !== 'undefined') {
            return r;
        } else {
            return this.lex();
        }
    },
begin:function begin(condition) {
        this.conditionStack.push(condition);
    },
popState:function popState() {
        return this.conditionStack.pop();
    },
_currentRules:function _currentRules() {
        return this.conditions[this.conditionStack[this.conditionStack.length-1]].rules;
    },
topState:function () {
        return this.conditionStack[this.conditionStack.length-2];
    },
pushState:function begin(condition) {
        this.begin(condition);
    }});
lexer.options = {"flex":true,"case-insensitive":true};
lexer.performAction = function anonymous(yy,yy_,$avoiding_name_collisions,YY_START) {

var YYSTATE=YY_START
switch($avoiding_name_collisions) {
case 0:/* ignore */
break;
case 1:return 35;
break;
case 2:return 34;
break;
case 3:return 13;
break;
case 4:return 15;
break;
case 5:return 27;
break;
case 6:return 29;
break;
case 7:return 26;
break;
case 8:return 30;
break;
case 9:return 31;
break;
case 10:return 'PERIOD';
break;
case 11:return 8;
break;
case 12:return 'TILDE';
break;
case 13:return 42;
break;
case 14:return 43;
break;
case 15:return "NOT";
break;
case 16:return 25;
break;
case 17:return 45;
break;
case 18:return 46;
break;
case 19:return 47;
break;
case 20:return 59;
break;
case 21:return 65;
break;
case 22:return 66;
break;
case 23:return 63;
break;
case 24:return 62;
break;
case 25:return 58;
break;
case 26:return 53;
break;
case 27:return 54;
break;
case 28:return 55;
break;
case 29:return 56;
break;
case 30:return 52;
break;
case 31:return 51;
break;
case 32:return 50;
break;
case 33:return 48;
break;
case 34:return 57;
break;
case 35:return 49;
break;
case 36:return 16;
break;
case 37:return 17;
break;
case 38:return 38;
break;
case 39:return 68;
break;
case 40:return 74;
break;
case 41:return 76;
break;
case 42:return 70;
break;
case 43:return 78;
break;
case 44:return 72;
break;
case 45:return 32;
break;
case 46:return 12;
break;
case 47:return 36;
break;
case 48:/* */
break;
case 49:return 5;
break;
case 50:return 'INVALID';
break;
case 51:console.log(yy_.yytext);
break;
}
};
lexer.rules = [/^(?:\s*\n\s*)/i,/^(?:[\w]?"(\\.|[^\\"])*")/i,/^(?:[\w]?'(\\.|[^\\'])*')/i,/^(?:\{)/i,/^(?:\})/i,/^(?:\()/i,/^(?:\))/i,/^(?:\[)/i,/^(?:\]s)/i,/^(?:\])/i,/^(?:\.)/i,/^(?:,)/i,/^(?:~)/i,/^(?:(true|false))/i,/^(?:null)/i,/^(?:not)/i,/^(?:\*)/i,/^(?:-)/i,/^(?:\+)/i,/^(?:\/)/i,/^(?:case)/i,/^(?:when)/i,/^(?:then)/i,/^(?:else)/i,/^(?:end)/i,/^(?:in)/i,/^(?:>=)/i,/^(?:<=)/i,/^(?:>)/i,/^(?:<)/i,/^(?:=)/i,/^(?:like)/i,/^(?:ilike)/i,/^(?:and)/i,/^(?:is)/i,/^(?:or)/i,/^(?:as)/i,/^(?:on)/i,/^(?:(asc|desc))/i,/^(?:where)/i,/^(?:order by)/i,/^(?:limit)/i,/^(?:group by)/i,/^(?:offset)/i,/^(?:having)/i,/^(?:([a-zA-Z][\w_]*)\.([a-zA-Z][\w_]*))/i,/^(?:([a-zA-Z][\w_]*))/i,/^(?:([0-9])([0-9.])*)/i,/^(?:\s+)/i,/^(?:$)/i,/^(?:.)/i,/^(?:.)/i];
lexer.conditions = {"INITIAL":{"rules":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51],"inclusive":true}};
return lexer;})()
parser.lexer = lexer;
function Parser () { this.yy = {}; }Parser.prototype = parser;parser.Parser = Parser;
return new Parser;
})();
if (typeof require !== 'undefined' && typeof exports !== 'undefined') {
exports.parser = parser;
exports.Parser = parser.Parser;
exports.parse = function () { return parser.parse.apply(parser, arguments); }
exports.main = function commonjsMain(args) {
    if (!args[1])
        throw new Error('Usage: '+args[0]+' FILE');
    var source, cwd;
    if (typeof process !== 'undefined') {
        source = require('fs').readFileSync(require('path').resolve(args[1]), "utf8");
    } else {
        source = require("file").path(require("file").cwd()).join(args[1]).read({charset: "utf-8"});
    }
    return exports.parser.parse(source);
}
if (typeof module !== 'undefined' && require.main === module) {
  exports.main(typeof process !== 'undefined' ? process.argv.slice(1) : require("system").args);
}
}